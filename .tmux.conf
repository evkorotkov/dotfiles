set -g @plugin 'rose-pine/tmux'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

run-shell "~/.dotfiles/tmux/theme-loader.sh"
run-shell "~/.dotfiles/tmux/theme-watcher.sh >/dev/null 2>&1 &"

set -g @rose_pine_disable_active_window_menu 'on'
set -g @rose_pine_bar_bg_disable 'on'
set -g @rose_pine_bar_bg_disabled_color_option 'default'
set -g @rose_pine_date_time '%a %B %-d, %Y'
set -g @rose_pine_right_separator ' | '
set -g @rose_pine_window_status_separator " | "
set -g @rose_pine_date_time_icon "ó°€µ"

set -g @rose_pine_status_right_prepend_section '#(tmux-k8s-current-context) #(tmux-git-status)'

# Proper colors
set-option -sa terminal-features ',alacritty:RGB' # Makes sure that colors in tmux are the same as without tmux

# Undercurl
set -g default-terminal "tmux-256color" # If you don't add this, then neovim :checkhealth will complain. But "alacritty" also works
set-option -ga terminal-features ",alacritty:usstyle"

set-option -g allow-rename off

if-shell 'test -n $SSH_TTY' {
  setenv -g SSH_AUTH_SOCK $HOME/.ssh/ssh_auth_sock
  set -g update-environment -r
}

setenv -g XDG_CONFIG_HOME $HOME/.config
set -g default-command "$SHELL --login"
set -g default-shell $SHELL

set -g history-limit 10000

set -g renumber-windows on
set -g base-index 1
setw -g pane-base-index 1

# Reduce time to wait for Escape key (for neovim)
set-option escape-time 40

set -g mouse on
set-option -s set-clipboard on
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection "xclip -selection clipboard -i"

set -g focus-events on

set -g monitor-activity on
set -g visual-activity off

set -g status-interval 1

setw -g mode-keys vi
bind v copy-mode
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel

bind g display-popup -d "#{pane_current_path}" -h 90% -w 90% -E "lazygit"
bind P display-popup -E "tmux-sessionizer"

#### MAPPINGS
bind r source-file ~/.tmux.conf \; display "tmux has been reloaded!"

# better movement
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind ';' last-window

bind / copy-mode \; send-key ?

bind "|" split-window -fh -c "#{pane_current_path}"
bind "\\" split-window -h -c "#{pane_current_path}"
bind "-" split-window -v -c "#{pane_current_path}"
bind "_" split-window -fv -c "#{pane_current_path}"

bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-h resize-pane -L 5
bind -r C-l resize-pane -R 5

bind -T copy-mode-vi C-o run-shell '
  tmux send-keys -X copy-line
  file_path=$(tmux show-buffer | grep -Eo "([a-zA-Z0-9._+-]+)?/[a-zA-Z0-9._/+-]+(:[0-9]+)?" | head -n 1)
  url=$(tmux show-buffer | grep -Eo "(https?://(?:www\.)?)[a-z0-9]+([-.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(/.*)?" | head -n 1)
  tmux delete-buffer

  if [[ $file_path =~ (.+):([0-9]+) ]]; then
    file_path="${BASH_REMATCH[1]}"
    line_number="${BASH_REMATCH[2]}"
  else
    line_number="0"
  fi

  if [ -n "$url" ]; then
    open $url
  elif [ -n "$file_path" ]; then
    tmux run-shell "nvim --server /tmp/current-neovim-server --remote-send \":e +$line_number $file_path<CR>\""
    tmux select-window -t=:nvim
  else
    tmux display-message "No file path found on this line"
  fi
'

run '~/.tmux/plugins/tpm/tpm'
